<!--  Based on https://raw.githubusercontent.com/eclipse/elk/master/build/org.eclipse.elk.repository/publish.xml
by Christoph Daniel Schulze
See https://wiki.eclipse.org/Milestone_and_Release_Builds

Usage:
ant -file publish.xml -DtargetDir=/shared/technology/triquetrum/updates/nightly/ zipIt copy

See https://wiki.eclipse.org/Hudson#Server_Storage for how to choose the correct path:

   # Medium-term storage:
   /shared/<project id with . replaced by />
   # Long-term storage:
   /home/data/httpd/download.eclipse.org/<project name />
   
 -->
<!--
Provides a number of targets that know what to do with built update
sites. This includes:

  * copy    - Copies a complete directory ${sourceDir} (which presumably
              contains an update site) to a target directory ${targetDir}.
  * purge   - Purges the target directory ${targetDir}. By removing it.
              Completely.
  * zipIt   - Zips the content of ${sourceDir} into a ZIP file at
              ${targetDir}/${targetZipFileName}.
-->
<project name="Eclipse Triquetrum" basedir=".">

    <!-- ================================================================= -->
    <!-- P R O P E R T I E S                                               -->
    <!-- ================================================================= -->
    <property name="sourceDir" value="target/repository/" />
    <property name="targetZipFileName" value="triquetrum-nightly.zip" />
    <!-- The targetDir property must be set externally. -->


    <!-- ================================================================= -->
    <!-- P U R G E                                                         -->
    <!-- ================================================================= -->
    <target name="purge"
            description="Purges the target directory by removing it.">

        <delete dir="${targetDir}" />
    </target>


    <!-- ================================================================= -->
    <!-- C O P Y                                                           -->
    <!-- ================================================================= -->
    <target name="copy"
            description="Copies a source directory to a target directory.">

        <!-- Empty the target directory -->
        <delete dir="${targetDir}" />

        <!-- Recreate the target directory. It can happen that this task
             fails seemingly at random. To be sure, we wrap it in a retry
             task that repeats the mkdir call up to 10 times, with a pause
             between each pair of attempts (the retrydelay is measured in
             milliseconds). -->
        <retry retrycount="10" retrydelay="1000">
            <mkdir dir="${targetDir}" />
        </retry>

        <!-- Copy to target directory -->
        <copy todir="${targetDir}">
            <fileset dir="${sourceDir}" />
        </copy>
    </target>

    <!-- ================================================================= -->
    <!-- C O P Y Z I P S                                                   -->
    <!-- ================================================================= -->
    <target name="copyZips"
            description="Copies *.zip files in a source directory to a target directory.">

      
        <!-- To test, use:
	     ant -file publish.xml -DtargetDir=/tmp/testPub/ -DsourceDir=target/products/ copyZips
	  -->
        <!-- Empty the target directory -->
        <delete dir="${targetDir}" />

        <!-- Recreate the target directory. It can happen that this task
             fails seemingly at random. To be sure, we wrap it in a retry
             task that repeats the mkdir call up to 10 times, with a pause
             between each pair of attempts (the retrydelay is measured in
             milliseconds). -->
        <retry retrycount="10" retrydelay="1000">
            <mkdir dir="${targetDir}" />
        </retry>

        <!-- Copy to target directory -->
        <copy todir="${targetDir}">
            <fileset dir="${sourceDir}">
	      <include name="*.zip"/>
	    </fileset>
        </copy>
    </target>


    <!-- ================================================================= -->
    <!-- Z I P   I T                                                       -->
    <!-- ================================================================= -->
    <target name="zipIt"
            description="Produces a zip file from the source directory.">

        <!-- Delete before creating and avoid "A zip file cannot include itself" -->
        <delete file="${sourceDir}/${targetZipFileName}" />

        <!-- Produce a zip archive of the update site -->
        <zip zipfile="${sourceDir}/${targetZipFileName}" update="false">
            <zipfileset dir="${sourceDir}" />
        </zip>
    </target>

</project>
